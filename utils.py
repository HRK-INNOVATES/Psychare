from datetime import datetime, timedelta
import os
import pdfkit
from flask import render_template

def get_availability_slots(availabilities, existing_appointments):
    """
    Calculate available time slots based on doctor's availability and existing appointments
    
    Args:
        availabilities: List of Availability objects
        existing_appointments: List of Appointment objects
    
    Returns:
        List of available time slots in format "HH:MM - HH:MM"
    """
    available_slots = []
    slot_duration = 30  # 30 minutes per appointment
    
    for availability in availabilities:
        # Convert to datetime for easier manipulation
        start_dt = datetime.combine(datetime.today(), availability.start_time)
        end_dt = datetime.combine(datetime.today(), availability.end_time)
        
        # Get all possible slots for this availability
        current_slot = start_dt
        while current_slot + timedelta(minutes=slot_duration) <= end_dt:
            slot_end = current_slot + timedelta(minutes=slot_duration)
            
            # Check if this slot overlaps with any existing appointment
            slot_available = True
            for appointment in existing_appointments:
                appt_start = datetime.combine(datetime.today(), appointment.start_time)
                appt_end = datetime.combine(datetime.today(), appointment.end_time)
                
                # Check for overlap
                if (current_slot < appt_end and slot_end > appt_start):
                    slot_available = False
                    break
            
            if slot_available:
                slot_str = f"{current_slot.strftime('%H:%M')} - {slot_end.strftime('%H:%M')}"
                available_slots.append(slot_str)
            
            current_slot += timedelta(minutes=slot_duration)
    
    return available_slots

def create_pdf_report(report, patient, doctor, output_path):
    """
    Generate a PDF report for a patient
    
    Args:
        report: PatientReport object
        patient: User object for the patient
        doctor: User object for the doctor
        output_path: Path to save the PDF
    """
    # Create HTML content for PDF
    html_content = f"""
    <html>
    <head>
        <style>
            body {{ font-family: Arial, sans-serif; margin: 20px; }}
            .header {{ text-align: center; margin-bottom: 20px; }}
            .report-title {{ color: #007bff; }}
            .section {{ margin-bottom: 15px; }}
            .section-title {{ color: #555; margin-bottom: 5px; }}
            .patient-info {{ display: flex; justify-content: space-between; }}
            .info-block {{ padding: 10px; background-color: #f8f9fa; border-radius: 5px; }}
            .footer {{ text-align: center; margin-top: 30px; font-size: 12px; color: #777; }}
        </style>
    </head>
    <body>
        <div class="header">
            <h1 class="report-title">Psychological Counseling Report</h1>
            <p>Report Date: {report.report_date.strftime('%B %d, %Y')}</p>
        </div>
        
        <div class="patient-info">
            <div class="info-block">
                <h3>Patient Information</h3>
                <p>Name: {patient.get_full_name()}</p>
                <p>Email: {patient.email}</p>
            </div>
            
            <div class="info-block">
                <h3>Doctor Information</h3>
                <p>Name: Dr. {doctor.get_full_name()}</p>
                <p>Specialization: {doctor.doctor_info.specialization}</p>
            </div>
        </div>
        
        <div class="section">
            <h3 class="section-title">Diagnosis</h3>
            <p>{report.diagnosis}</p>
        </div>
        
        <div class="section">
            <h3 class="section-title">Treatment Plan</h3>
            <p>{report.treatment_plan}</p>
        </div>
        
        <div class="section">
            <h3 class="section-title">Recommendations</h3>
            <p>{report.recommendations}</p>
        </div>
        
        <div class="section">
            <h3 class="section-title">Next Appointment</h3>
            <p>{report.next_appointment.strftime('%B %d, %Y') if report.next_appointment else 'Not scheduled'}</p>
        </div>
        
        <div class="footer">
            <p>This is an official medical report generated by the Psychological Counseling System.</p>
            <p>Report ID: {report.id}</p>
        </div>
    </body>
    </html>
    """
    
    # Generate PDF
    try:
        pdfkit.from_string(html_content, output_path)
        return True
    except Exception as e:
        print(f"Error generating PDF: {str(e)}")
        return False
